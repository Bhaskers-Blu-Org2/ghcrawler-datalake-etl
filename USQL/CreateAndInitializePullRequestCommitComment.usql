// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.


USE GHInsights;
REFERENCE ASSEMBLY [GHInsights.USql];
REFERENCE ASSEMBLY [Newtonsoft.Json];


@PRCommitComment =
SELECT  Urn
        ,GHInsights.USql.Utility.GetString(Data, "_metadata.links.pull_request_commit.href") AS CommitUrn
        ,GHInsights.USql.Utility.GetString(Data, "_metadata.links.siblings.href") AS SiblingsUrn
        ,GHInsights.USql.Utility.GetString(Data, "commit_id") AS CommitSha
        ,GHInsights.USql.Utility.GetInteger(Data, "id") AS CommitCommentId
        ,GHInsights.USql.Utility.GetUSqlString(Data, "body") AS Body
        ,GHInsights.USql.Utility.GetDateTime(Data, "created_at") AS CreatedAt
        ,GHInsights.USql.Utility.GetInteger(Data, "line") AS Line
        ,GHInsights.USql.Utility.GetString(Data, "path") AS Path
        ,GHInsights.USql.Utility.GetInteger(Data, "position") AS Position
        ,GHInsights.USql.Utility.GetDateTime(Data, "updated_at") AS UpdatedAt
        ,GHInsights.USql.Utility.GetInteger(Data, "user.id") AS UserId
        ,GHInsights.USql.Utility.GetString(Data, "user.login") AS UserLogin
        ,GHInsights.USql.Utility.GetBoolean(Data, "user.site_admin") AS UserSiteAdmin
        ,GHInsights.USql.Utility.GetString(Data, "user.type") AS UserType
        ,GHInsights.USql.Utility.GetString(Data, "_metadata.links.user.href") AS UserUrn
        ,GHInsights.USql.Utility.GetInteger(Data, "_metadata.version") AS SchemaVersion
        ,FetchedAt
        ,ProcessedAt
        ,DeletedAt
        ,GHInsights.USql.Utility.GetString(Data, "_metadata.links.self.href") AS EtlSourceId
        ,DateTime.Parse(IngestDate, null, System.Globalization.DateTimeStyles.AssumeUniversal).ToUniversalTime() AS EtlIngestDate
FROM Staging.GHCrawler.GitHubData
WHERE EntityName == "pull_request_commit_comment";

@PRCommitCommentDeDupe =
SELECT   *
        ,ROW_NUMBER() OVER (PARTITION BY EtlSourceId ORDER BY DeletedAt, ProcessedAt DESC) AS RowNumber
FROM @PRCommitComment;

DROP TABLE IF EXISTS dbo.PullRequestCommitComment;

CREATE TABLE dbo.PullRequestCommitComment
(
    INDEX IX_CommitComment
    CLUSTERED(CommitUrn)
    DISTRIBUTE
    HASH(CommitUrn, UpdatedAt)
    INTO 20
)
AS
SELECT Urn
      ,CommitUrn
      ,SiblingsUrn
      ,CommitSha
      ,CommitCommentId
      ,Body
      ,CreatedAt
      ,Line
      ,Path
      ,Position
      ,UpdatedAt
      ,UserId
      ,UserLogin
      ,UserSiteAdmin
      ,UserType
      ,UserUrn
      ,SchemaVersion
      ,FetchedAt
      ,ProcessedAt
      ,DeletedAt
      ,EtlSourceId
      ,EtlIngestDate
FROM @PRCommitCommentDeDupe
WHERE RowNumber == 1;
