// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// DROP PROCEDURE IF EXISTS Extended.dbo.VerifyRepos;

// CREATE PROCEDURE Extended.dbo.VerifyRepos()
// AS
// BEGIN

DECLARE @LastUtcMidnight = DateTime.UtcNow.Date;

@AllDataLakeOrgs =
SELECT Login AS OrgName
FROM GHInsights.dbo.Org
WHERE DeletedAt IS NULL;

OUTPUT @AllDataLakeOrgs
TO "wasb://ghcrawlerverification@ospobackup/orgs.csv"
ORDER BY OrgName
USING Outputters.Csv(escapeCharacter: '\\', quoting: true, outputHeader: false);

@GitHubRepos =
EXTRACT RepoUrn string,
        OrgId long?,
        OrgName string,
        RepoId long?,
        RepoName string,
        CreatedAt DateTime?,
        Issues int,
        PullRequests int
FROM "wasb://ghcrawlerverification@ospobackup/github-repos.csv"
USING Extractors.Csv(skipFirstNRows:1);

// TODO: Uncomment
// @GitHubRandomCommits =
// EXTRACT Urn string
// FROM "wasb://ghcrawlerverification@ospobackup/github-random-commits.csv"
// USING Extractors.Csv();

@Orgs =
SELECT  DISTINCT OrgId, OrgName
FROM @GitHubRepos;

@DataLakeReposForInputOrgs =
SELECT  Urn AS RepoUrn,
        OrgId,
        OrgName,
        RepoId,
        Name AS RepoName,
        CreatedAt
FROM GHInsights.dbo.Repo
JOIN @Orgs ON OrganizationId == OrgId
WHERE DeletedAt IS NULL;

@ExtraReposInDataLake =
SELECT  RepoUrn,
        OrgId,
        OrgName,
        RepoId,
        RepoName,
        CreatedAt,
        "Extra" AS ExtraOrMissing
FROM @GitHubRepos AS ghr
RIGHT ANTISEMIJOIN @DataLakeReposForInputOrgs AS dlr ON ghr.RepoUrn == dlr.RepoUrn;

@MissingReposInDataLake =
SELECT  RepoUrn,
        OrgId,
        OrgName,
        RepoId,
        RepoName,
        CreatedAt,
        "Missing" AS ExtraOrMissing
FROM @GitHubRepos AS ghr
LEFT ANTISEMIJOIN @DataLakeReposForInputOrgs AS dlr ON ghr.RepoUrn == dlr.RepoUrn;

@ReposDiff =
SELECT *
FROM @ExtraReposInDataLake
UNION ALL
SELECT *
FROM @MissingReposInDataLake;

OUTPUT @ReposDiff
TO "wasb://ghcrawlerverification@ospobackup/repos-diff.csv"
ORDER BY OrgName, RepoName
USING Outputters.Csv(escapeCharacter: '\\', quoting: true, outputHeader: true);

// @MissingRepos =
// SELECT * // TODO: + 'missing'
// FROM @GitHubRepos AS ghr
// LEFT ANTISEMIJOIN @DataLakeReposForInputOrgs AS ar ON ar.RepoUrn == ghr.RepoUrn;




// @IssuesIncludingPullRequestsByReposForInputOrgs =
// SELECT  i.RepoUrn,
//         COUNT(Urn) AS Issues
// FROM GHInsights.dbo.Issue AS i
// INNER JOIN @Repos AS r ON i.RepoUrn == r.RepoUrn
// WHERE i.CreatedAt <= @LastUtcMidnight
// GROUP BY i.RepoUrn;

// @PullRequestsByReposForInputOrgs =
// SELECT  pr.RepoUrn,
//         COUNT(Urn) AS PullRequests
// FROM GHInsights.dbo.PullRequest AS pr
// INNER JOIN @Repos AS r ON pr.RepoUrn == r.RepoUrn
// WHERE pr.CreatedAt <= @LastUtcMidnight
// GROUP BY pr.RepoUrn;




// @ReposData =
// SELECT  OrgName,
//         RepoName,
//         r.RepoUrn,
//         OrgId,
//         RepoId,
//         CreatedAt,
//         (Issues IS NULL ? 0 : Issues) AS Issues,s
//         (PullRequests IS NULL ? 0 : PullRequests) AS PullRequests
// FROM @Repos AS r
// LEFT JOIN @IssuesIncludingPullRequestsByRepos AS i ON r.RepoUrn == i.RepoUrn
// LEFT JOIN @PullRequestsByRepos AS pr ON r.RepoUrn == pr.RepoUrn;

// OUTPUT @ReposData
// TO "wasb://ghcrawlerverification@ospobackup/datalake-repos.csv"
// ORDER BY OrgName, RepoName
// USING Outputters.Csv(escapeCharacter: '\\', quoting: true, outputHeader: true);

// END;
