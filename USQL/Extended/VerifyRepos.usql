// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

DROP PROCEDURE IF EXISTS Extended.dbo.VerifyRepos;

CREATE PROCEDURE Extended.dbo.VerifyRepos()
AS
BEGIN

@AllDataLakeOrgs =
SELECT Login AS OrgName
FROM GHInsights.dbo.Org
WHERE DeletedAt IS NULL;

OUTPUT @AllDataLakeOrgs
TO "wasb://ghcrawlerverification@ospobackup/orgs.csv"
ORDER BY OrgName
USING Outputters.Csv(escapeCharacter: '\\', quoting: false, outputHeader: false);

@CutoffTime =
EXTRACT Cutoff DateTime
FROM "wasb://ghcrawlerverification@ospobackup/cutoff-time.csv"
USING Extractors.Csv();

@GitHubRepos =
EXTRACT OrgName string,
        RepoName string,
        RepoUrn string,
        OrgId long?,
        RepoId long?,
        CreatedAt DateTime?,
        Issues int,
        PullRequests int
FROM "wasb://ghcrawlerverification@ospobackup/github-repos.csv"
USING Extractors.Csv(skipFirstNRows:1);

@GitHubRandomCommits =
EXTRACT OrgName string,
        RepoName string,
        OrgId long?,
        RepoId long?,
        Sha string,
        CommitterDate DateTime
FROM "wasb://ghcrawlerverification@ospobackup/github-random-commits.csv"
USING Extractors.Csv(skipFirstNRows:1);

@Orgs =
SELECT  DISTINCT OrgId, OrgName
FROM @GitHubRepos;

@DataLakeReposForInputOrgs =
SELECT  Urn AS RepoUrn,
        OrgId,
        OrgName,
        RepoId,
        Name AS RepoName,
        CreatedAt
FROM GHInsights.dbo.Repo
JOIN @Orgs ON OrganizationId == OrgId
CROSS JOIN @CutoffTime
WHERE DeletedAt IS NULL
AND CreatedAt <= Cutoff;

@ExtraReposInDataLake =
SELECT  OrgName,
        RepoName,
        RepoUrn,
        OrgId,
        RepoId,
        CreatedAt,
        "Extra" AS ExtraOrMissing
FROM @GitHubRepos AS ghr
RIGHT ANTISEMIJOIN @DataLakeReposForInputOrgs AS dlr ON ghr.RepoUrn == dlr.RepoUrn;

@MissingReposInDataLake =
SELECT  OrgName,
        RepoName,
        RepoUrn,
        OrgId,
        RepoId,
        CreatedAt,
        "Missing" AS ExtraOrMissing
FROM @GitHubRepos AS ghr
LEFT ANTISEMIJOIN @DataLakeReposForInputOrgs AS dlr ON ghr.RepoUrn == dlr.RepoUrn;

@ReposDiff =
SELECT *
FROM @ExtraReposInDataLake
UNION ALL
SELECT *
FROM @MissingReposInDataLake;

OUTPUT @ReposDiff
TO "wasb://ghcrawlerverification@ospobackup/repos-diff.csv"
ORDER BY OrgName, RepoName
USING Outputters.Csv(escapeCharacter: '\\', quoting: false, outputHeader: true);

@IssuesIncludingPullRequestsByReposForInputOrgs =
SELECT  i.RepoUrn,
        COUNT(Urn) AS Issues
FROM GHInsights.dbo.Issue AS i
INNER JOIN @DataLakeReposForInputOrgs AS r ON i.RepoUrn == r.RepoUrn
CROSS JOIN @CutoffTime
WHERE i.CreatedAt <= Cutoff
GROUP BY i.RepoUrn;

@IssuesDiff =
SELECT  OrgName,
        RepoName,
        ghr.RepoUrn,
        OrgId,
        RepoId,
        CreatedAt,
        ghr.Issues AS GitHubIssues,
        i.Issues AS DataLakeIssues
FROM @GitHubRepos AS ghr
INNER JOIN @IssuesIncludingPullRequestsByReposForInputOrgs AS i ON ghr.RepoUrn == i.RepoUrn
WHERE ghr.Issues != i.Issues;

OUTPUT @IssuesDiff
TO "wasb://ghcrawlerverification@ospobackup/issues-diff.csv"
ORDER BY OrgName, RepoName
USING Outputters.Csv(escapeCharacter: '\\', quoting: false, outputHeader: true);

@PullRequestsByReposForInputOrgs =
SELECT  pr.RepoUrn,
        COUNT(Urn) AS PullRequests
FROM GHInsights.dbo.PullRequest AS pr
INNER JOIN @DataLakeReposForInputOrgs AS r ON pr.RepoUrn == r.RepoUrn
CROSS JOIN @CutoffTime
WHERE pr.CreatedAt <= Cutoff
GROUP BY pr.RepoUrn;

@PullRequestsDiff =
SELECT  OrgName,
        RepoName,
        ghr.RepoUrn,
        OrgId,
        RepoId,
        CreatedAt,
        ghr.PullRequests AS GitHubPullRequests,
        pr.PullRequests AS DataLakePullRequests
FROM @GitHubRepos AS ghr
INNER JOIN @PullRequestsByReposForInputOrgs AS pr ON ghr.RepoUrn == pr.RepoUrn
WHERE ghr.PullRequests != pr.PullRequests;

OUTPUT @PullRequestsDiff
TO "wasb://ghcrawlerverification@ospobackup/pullrequests-diff.csv"
ORDER BY OrgName, RepoName
USING Outputters.Csv(escapeCharacter: '\\', quoting: false, outputHeader: true);

@AllCommits =
SELECT CommitSha
FROM GHInsights.dbo.Commit;

@MissingCommitsInDataLake =
SELECT  OrgName,
        RepoName,
        OrgId,
        RepoId,
        Sha,
        CommitterDate
FROM @GitHubRandomCommits
LEFT ANTISEMIJOIN @AllCommits ON Sha == CommitSha;

OUTPUT @MissingCommitsInDataLake
TO "wasb://ghcrawlerverification@ospobackup/missing-commits.csv"
ORDER BY OrgName, RepoName, Sha
USING Outputters.Csv(escapeCharacter: '\\', quoting: false, outputHeader: true);

END;
