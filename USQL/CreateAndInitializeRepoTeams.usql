// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

USE GHInsights;
REFERENCE ASSEMBLY [GHInsights.USql];
REFERENCE ASSEMBLY [Newtonsoft.Json];

//get all
@RawRepoTeams =
SELECT  GHInsights.USql.Utility.GetString(Data, "_metadata.links.origin.href") AS OriginUrn
        ,GHInsights.USql.Utility.GetString(Data, "_metadata.links.unique.href") AS UniqueUrn
        ,Data
        ,Urn AS EtlSourceId
        ,FetchedAt
        ,ProcessedAt
        ,DateTime.Parse(IngestDate, null, System.Globalization.DateTimeStyles.AssumeUniversal).ToUniversalTime() AS EtlIngestDate
FROM Staging.GHCrawler.GitHubData AS e
WHERE EntityName == "teams";

//find most recent unique for origin

@UniqueNumberedRepoTeams =
SELECT   UniqueUrn
        ,ROW_NUMBER() OVER (PARTITION BY OriginUrn ORDER BY ProcessedAt DESC) AS RowNumber
FROM @RawRepoTeams;

@UniqueMostRecentRepoTeams = SELECT DISTINCT UniqueUrn FROM @UniqueNumberedRepoTeams WHERE RowNumber == 1;

@CollectionExplodeRepoTeams =
SELECT  EtlIngestDate
        ,OriginUrn
        ,JsonPath
        ,GHInsights.USql.Utility.GetUSqlString(Value) AS CollectionUrn
        ,EtlSourceId
        ,FetchedAt
        ,ProcessedAt
        ,u.UniqueUrn
FROM @UniqueMostRecentRepoTeams AS u INNER JOIN @RawRepoTeams AS e ON u.UniqueUrn == e.UniqueUrn
CROSS APPLY EXPLODE(Data) AS d(JsonPath string, Value byte[])
WHERE JsonPath.StartsWith("_metadata.links.resources.hrefs[");


DROP TABLE IF EXISTS dbo.RepoTeams;

CREATE TABLE dbo.RepoTeams
(
    INDEX IX_RepoContributors
    CLUSTERED(RepoUrn, TeamUrn)
    DISTRIBUTE
    HASH(RepoUrn)
    INTO 20
)
AS
SELECT  OriginUrn AS RepoUrn,
        CollectionUrn AS TeamUrn,
        FetchedAt,
        ProcessedAt,
        EtlIngestDate,
        UniqueUrn
FROM @CollectionExplodeRepoTeams;
